// Check browser version
var isNav4 = false, isNav5 = false, isIE4 = false
var strSeperator = "/"; 
// If you are using any Java validation on the back side you will want to use the / because 
// Java date validations do not recognize the dash as a valid date separator.
var vDateType = 3; // Global value for type of date format
//                1 = mm/dd/yyyy
//                2 = yyyy/dd/mm  (Unable to do date check at this time)
//                3 = dd/mm/yyyy
var vYearType = 4; //Set to 2 or 4 for number of digits in the year for Netscape
var vYearLength = 2; // Set to 4 if you want to force the user to enter 4 digits for the year before validating.
var err = 0; // Set the error code to a default of zero
if(navigator.appName == "Netscape") {
  if (navigator.appVersion < "5") {
    isNav4 = true;
    isNav5 = false;
  }
  else
    if (navigator.appVersion > "4") {
      isNav4 = false;
      isNav5 = true;
    }
}
else {
  isIE4 = true;
}


function DateFormat(vDateName, vDateValue, e, dateCheck, dateType) {

vDateType = dateType;
  // vDateName = object name
  // vDateValue = value in the field being checked
  // e = event
  // dateCheck 
  // True  = Verify that the vDateValue is a valid date
  // False = Format values being entered into vDateValue only
  // vDateType
  // 1 = mm/dd/yyyy
  // 2 = yyyy/mm/dd
  // 3 = dd/mm/yyyy
  //Enter a tilde sign for the first number and you can check the variable information.
  if (vDateValue == "~") {
    alert("AppVersion = "+navigator.appVersion+" \nNav. 4 Version = "+isNav4+" \nNav. 5 Version = "+isNav5+" \nIE Version = "+isIE4+" \nYear Type = "+vYearType+" \nDate Type = "+vDateType+" \nSeparator = "+strSeperator);
    vDateName.value = "";
    vDateName.focus();
    return true;
  }

  var whichCode = (window.Event) ? e.which : e.keyCode

  //var whichCode = (document.all) ? e.keyCode : e.wich;
  // Check to see if a seperator is already present.
  // bypass the date if a seperator is present and the length greater than 8

if (vDateValue.length > 8 && isNav4) {
    if ((vDateValue.indexOf("-") >= 1) || (vDateValue.indexOf("/") >= 1))
      return true;
    }
 
  //Eliminate all the ASCII codes that are not valid
  var alphaCheck = " abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ/-";
  if (alphaCheck.indexOf(vDateValue) >= 1) {
    if (isNav4) {
      vDateName.value = "";
      vDateName.focus();
      vDateName.select();
      return false;
    }
    else {
      vDateName.value = vDateName.value.substr(0, (vDateValue.length-1));
      return false;
    }
  }

  if (whichCode == 8 || (whichCode == null && !dateCheck)) //Ignore the Netscape value for backspace. IE has no value
    return false;
  else {
    //Create numeric string values for 0123456789/
    //The codes provided include both keyboard and keypad values
    var strCheck = '47,48,49,50,51,52,53,54,55,56,57,58,59,95,96,97,98,99,100,101,102,103,104,105';

	if (strCheck.indexOf(whichCode) != -1 && whichCode != null) {
    if (isNav4) {
      if (((vDateValue.length < 6 && dateCheck) || (vDateValue.length == 7 && dateCheck)) && (vDateValue.length >=1)) {
        alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dd/mm/yyyy");
        vDateName.value = "";
        vDateName.focus();
        vDateName.select();
        return false;
      }
	  if (vDateValue.length == 6 && dateCheck) {
        var mDay = vDateName.value.substr(2,2);
        var mMonth = vDateName.value.substr(0,2);
        var mYear = vDateName.value.substr(4,4)
        //Turn a two digit year into a 4 digit year
        if (mYear.length == 2 && vYearType == 4) {
          var mToday = new Date();
          //If the year is greater than 30 years from now use 19, otherwise use 20
          var checkYear = mToday.getFullYear() + 30; 
          var mCheckYear = '20' + mYear;
          if (mCheckYear >= checkYear)
            mYear = '19' + mYear;
          else
            mYear = '20' + mYear;
        }
        var vDateValueCheck = mMonth+strSeperator+mDay+strSeperator+mYear;
        if (!dateValid(vDateValueCheck)) {
          alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
          vDateName.value = "";
          vDateName.focus();
          vDateName.select();
          return false;
        }
        return true;
      } else {
		  // Reformat the date for validation and set date type to a 1
		  if (vDateValue.length >= 8  && dateCheck) {
			if (vDateType == 1) // mmddyyyy
			{
			  var mDay = vDateName.value.substr(2,2);
			  var mMonth = vDateName.value.substr(0,2);
			  var mYear = vDateName.value.substr(4,4)
			  vDateName.value = mMonth+strSeperator+mDay+strSeperator+mYear;
			}
			if (vDateType == 2) // yyyymmdd
			{
			  var mYear = vDateName.value.substr(0,4)
			  var mMonth = vDateName.value.substr(4,2);
			  var mDay = vDateName.value.substr(6,2);
			  vDateName.value = mYear+strSeperator+mMonth+strSeperator+mDay;
			}
			if (vDateType == 3) // ddmmyyyy
			{
			  var mMonth = vDateName.value.substr(2,2);
			  var mDay = vDateName.value.substr(0,2);
			  var mYear = vDateName.value.substr(4,4)
			  vDateName.value = mDay+strSeperator+mMonth+strSeperator+mYear;
			}
			//Create a temporary variable for storing the DateType and change
			//the DateType to a 1 for validation.
			var vDateTypeTemp = vDateType;
			vDateType = 1;
			var vDateValueCheck = mMonth+strSeperator+mDay+strSeperator+mYear;
			if (!dateValid(vDateValueCheck)) {
			  alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
			  vDateType = vDateTypeTemp;
			  vDateName.value = "";
			  vDateName.focus();
			  vDateName.select();
			  return false;
			}
			vDateType = vDateTypeTemp;
			return true;
		  } else {
			if (((vDateValue.length < 8 && dateCheck) || (vDateValue.length == 9 && dateCheck)) && (vDateValue.length >=1)) {
			  alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
			  vDateName.value = "";
			  vDateName.focus();
			  vDateName.select();
			  return false;
			}
      	  }
    	}
  } else {
	// Non isNav Check
    if (((vDateValue.length < 8 && dateCheck) || (vDateValue.length == 9 && dateCheck)) && (vDateValue.length >=1)) {
      alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
      vDateName.value = "";
      vDateName.focus();
      return true;
    }
    // Reformat date to format that can be validated. mm/dd/yyyy
    if (vDateValue.length >= 8 && dateCheck) {
    // Additional date formats can be entered here and parsed out to
    // a valid date format that the validation routine will recognize.
      if (vDateType == 1) // mm/dd/yyyy
      {
        var mMonth = vDateName.value.substr(0,2);
        var mDay = vDateName.value.substr(3,2);
        var mYear = vDateName.value.substr(6,4)
      }
      if (vDateType == 2) // yyyy/mm/dd
      {
        var mYear = vDateName.value.substr(0,4)
        var mMonth = vDateName.value.substr(5,2);
        var mDay = vDateName.value.substr(8,2);
      } 
      if (vDateType == 3) // dd/mm/yyyy
      {
        var mDay = vDateName.value.substr(0,2);
        var mMonth = vDateName.value.substr(3,2);
        var mYear = vDateName.value.substr(6,4)
      } 
      if (vYearLength == 4) {
        if (mYear.length < 4) {
          alert("Fecha Inválida.Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
          vDateName.value = "";
          vDateName.focus();
          return true;
        }
      }
      // Create temp. variable for storing the current vDateType
      var vDateTypeTemp = vDateType;
      // Change vDateType to a 1 for standard date format for validation
      // Type will be changed back when validation is completed.
      vDateType = 1;
      // Store reformatted date to new variable for validation.
      var vDateValueCheck = mMonth+strSeperator+mDay+strSeperator+mYear;
      if (mYear.length == 2 && vYearType == 4 && dateCheck) {
        //Turn a two digit year into a 4 digit year
        var mToday = new Date();
        //If the year is greater than 30 years from now use 19, otherwise use 20
        var checkYear = mToday.getFullYear() + 30; 
        var mCheckYear = '20' + mYear;
        if (mCheckYear >= checkYear)
          mYear = '19' + mYear;
        else
          mYear = '20' + mYear;
          vDateValueCheck = mMonth+strSeperator+mDay+strSeperator+mYear;
          // Store the new value back to the field.  This function will
          // not work with date type of 2 since the year is entered first.
          if (vDateTypeTemp == 1) // mm/dd/yyyy
            vDateName.value = mMonth+strSeperator+mDay+strSeperator+mYear;
          if (vDateTypeTemp == 3) // dd/mm/yyyy
            vDateName.value = mDay+strSeperator+mMonth+strSeperator+mYear;
      } 

      if (!dateValid(vDateValueCheck)) {
        alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
        vDateType = vDateTypeTemp;
        vDateName.value = "";
        vDateName.focus();
        return true;
      }
      vDateType = vDateTypeTemp;
      return true;
    }
    else {
      if (vDateType == 1) {
        if (vDateValue.length == 2) {
          vDateName.value = vDateValue+strSeperator;
        }
        if (vDateValue.length == 5) {
          vDateName.value = vDateValue+strSeperator;
        }
      }
      if (vDateType == 2) {
        if (vDateValue.length == 4) {
          vDateName.value = vDateValue+strSeperator;
        }
        if (vDateValue.length == 7) {
          vDateName.value = vDateValue+strSeperator;
        }
      } 
      if(vDateType == 3) {
        if (vDateValue.length == 2) {
          vDateName.value = vDateValue+strSeperator;
        }
        if (vDateValue.length == 5) {
          vDateName.value = vDateValue+strSeperator;
        }
      }
      return true;
    }
  }
  if (vDateValue.length == 10 && dateCheck) {
    if (!dateValid(vDateName)) {
      // Un-comment the next line of code for debugging the dateValid() function error messages
      //alert(err);  
      alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
      vDateName.focus();
      vDateName.select();
    }
  }
  return false;
  }
  else {
    // If the value is not in the string return the string minus the last
    // key entered.
    if (isNav4) {
      vDateName.value = "";
      vDateName.focus();
      vDateName.select();
      return false;
    }
    else
    {
	  if(!dateCheck){
	  	vDateName.value = vDateName.value.substr(0, (vDateValue.length-1));
      	return false;
	  }
	  else {
       //Added by Angela Mora G. Octubre 2008 para compatibilidad con Firefox
		   return validateFecha(vDateName,vDateValue,vDateType);
	  }
    }
  }
}
}

//Added by Angela Mora G. Octubre 2008 para compatibilidad con Firefox
function validateFecha(vDateName,vDateValue,vDateType){
  if (isNav4) {
      if (((vDateValue.length < 6) || (vDateValue.length == 7 )) && (vDateValue.length >=1)) {
        alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dd/mm/yyyy");
        vDateName.value = "";
        vDateName.focus();
        vDateName.select();
        return false;
      }
	  if (vDateValue.length == 6 ) {
        var mDay = vDateValue.substr(2,2);
        var mMonth = vDateValue.substr(0,2);
        var mYear = vDateValue.substr(4,4)
        //Turn a two digit year into a 4 digit year
        if (mYear.length == 2 && vYearType == 4) {
          var mToday = new Date();
          //If the year is greater than 30 years from now use 19, otherwise use 20
          var checkYear = mToday.getFullYear() + 30; 
          var mCheckYear = '20' + mYear;
          if (mCheckYear >= checkYear)
            mYear = '19' + mYear;
          else
            mYear = '20' + mYear;
        }
        var vDateValueCheck = mMonth+strSeperator+mDay+strSeperator+mYear;
        if (!dateValid(vDateValueCheck)) {
          alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
		  vDateName.value = "";
          vDateName.focus();
          vDateName.select();
          return false;
        }
        return true;
      } else {
		  // Reformat the date for validation and set date type to a 1
		  if (vDateValue.length >= 8 ) {
			if (vDateType == 1) // mmddyyyy
			{
			  var mDay = vDateValue.substr(2,2);
			  var mMonth = vDateValue.substr(0,2);
			  var mYear = vDateValue.substr(4,4)
			  vDateValue = mMonth+strSeperator+mDay+strSeperator+mYear;
			}
			if (vDateType == 2) // yyyymmdd
			{
			  var mYear = vDateValue.substr(0,4)
			  var mMonth = vDateValue.substr(4,2);
			  var mDay = vDateValue.substr(6,2);
			  vDateValue = mYear+strSeperator+mMonth+strSeperator+mDay;
			}
			if (vDateType == 3) // ddmmyyyy
			{
			  var mMonth = vDateValue.substr(2,2);
			  var mDay = vDateValue.substr(0,2);
			  var mYear = vDateValue.substr(4,4)
			  vDateValue = mDay+strSeperator+mMonth+strSeperator+mYear;
			}
			//Create a temporary variable for storing the DateType and change
			//the DateType to a 1 for validation.
			var vDateTypeTemp = vDateType;
			vDateType = 1;
			var vDateValueCheck = mMonth+strSeperator+mDay+strSeperator+mYear;
			if (!dateValid(vDateValueCheck)) {
			  alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
			  vDateType = vDateTypeTemp;
			  vDateName.value = "";
			  vDateName.focus();
			  vDateName.select();
			  return false;
			}
			vDateType = vDateTypeTemp;
			return true;
		  } else {
			if (((vDateValue.length < 8) || (vDateValue.length == 9 )) && (vDateValue.length >=1)) {
			  alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
			  vDateName.value = "";
			  vDateName.focus();
			  vDateName.select();
			  return false;
			}
      	  }
    	}
  } else {
	// Non isNav Check
    if (((vDateValue.length < 8 ) || (vDateValue.length == 9 )) && (vDateValue.length >=1)) {
      alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
      vDateName.value = "";
      vDateName.focus();
      return true;
    }
    // Reformat date to format that can be validated. mm/dd/yyyy
    if (vDateValue.length >= 8 ) {
    // Additional date formats can be entered here and parsed out to
    // a valid date format that the validation routine will recognize.
      if (vDateType == 1) // mm/dd/yyyy
      {
        var mMonth = vDateValue.substr(0,2);
        var mDay = vDateValue.substr(3,2);
        var mYear = vDateValue.substr(6,4)
      }
      if (vDateType == 2) // yyyy/mm/dd
      {
        var mYear = vDateValue.substr(0,4)
        var mMonth = vDateValue.substr(5,2);
        var mDay = vDateValue.substr(8,2);
      } 
      if (vDateType == 3) // dd/mm/yyyy
      {
        var mDay = vDateValue.substr(0,2);
        var mMonth = vDateValue.substr(3,2);
        var mYear = vDateValue.substr(6,4)
      } 

      if (vYearLength == 4) {
        if (mYear.length < 4) {
          alert("Fecha Inválida.Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
          vDateName.value = "";
          vDateName.focus();
          return true;
        }
      }
      // Create temp. variable for storing the current vDateType
      var vDateTypeTemp = vDateType;
      // Change vDateType to a 1 for standard date format for validation
      // Type will be changed back when validation is completed.
      vDateType = 1;
      // Store reformatted date to new variable for validation.
      var vDateValueCheck = mMonth+strSeperator+mDay+strSeperator+mYear;

      if (mYear.length == 2 && vYearType == 4) {
        //Turn a two digit year into a 4 digit year
        var mToday = new Date();
        //If the year is greater than 30 years from now use 19, otherwise use 20
        var checkYear = mToday.getFullYear() + 30; 
        var mCheckYear = '20' + mYear;
        if (mCheckYear >= checkYear)
          mYear = '19' + mYear;
        else
          mYear = '20' + mYear;
  
          vDateValueCheck = mMonth+strSeperator+mDay+strSeperator+mYear;
          // Store the new value back to the field.  This function will
          // not work with date type of 2 since the year is entered first.
          if (vDateTypeTemp == 1) // mm/dd/yyyy
            vDateValue = mMonth+strSeperator+mDay+strSeperator+mYear;
          if (vDateTypeTemp == 3) // dd/mm/yyyy
            vDateValue = mDay+strSeperator+mMonth+strSeperator+mYear;
      } 
      if (!dateValid(vDateValueCheck)) {
        alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
        vDateType = vDateTypeTemp;
        vDateName.value = "";
        vDateName.focus();
        return true;
      }
	  vDateName.value = vDateValue;
      vDateType = vDateTypeTemp;
      return true;
    }
    else {
      if (vDateType == 1) {
        if (vDateValue.length == 2) {
          vDateValue = vDateValue+strSeperator;
        }
        if (vDateValue.length == 5) {
          vDateValue = vDateValue+strSeperator;
        }
      }
      if (vDateType == 2) {
        if (vDateValue.length == 4) {
          vDateValue = vDateValue+strSeperator;
        }
        if (vDateValue.length == 7) {
          vDateValue = vDateValue+strSeperator;
        }
      } 
      if(vDateType == 3) {
        if (vDateValue.length == 2) {
          vDateValue = vDateValue+strSeperator;
        }
        if (vDateValue.length == 5) {
          vDateValue = vDateValue+strSeperator;
        }
      }
      return true;
    }
  }
  if (vDateValue.length == 10) {
    if (!dateValid(vDateName)) {
      // Un-comment the next line of code for debugging the dateValid() function error messages
      //alert(err);  
      alert("Fecha Inválida. Por favor vuelva a \ningresar la fecha con el formato dia/mes/año");
      vDateName.focus();
      vDateName.select();
    }
  }
  return false;
}

function dateValid(objName) {
  var strDate;
  var strDateArray;
  var strDay;
  var strMonth;
  var strYear;
  var intday;
  var intMonth;
  var intYear;
  var booFound = false;
  var datefield = objName;
  var strSeparatorArray = new Array("-"," ","/",".");
  var intElementNr;
  // var err = 0;
  var strMonthArray = new Array(12);
  strMonthArray[0] = "Jan";
  strMonthArray[1] = "Feb";
  strMonthArray[2] = "Mar";
  strMonthArray[3] = "Apr";
  strMonthArray[4] = "May";
  strMonthArray[5] = "Jun";
  strMonthArray[6] = "Jul";
  strMonthArray[7] = "Aug";
  strMonthArray[8] = "Sep";
  strMonthArray[9] = "Oct";
  strMonthArray[10] = "Nov";
  strMonthArray[11] = "Dec";
  //strDate = datefield.value;
  strDate = objName;
  if (strDate.length < 1) {
    return true;
  }
  for (intElementNr = 0; intElementNr < strSeparatorArray.length; intElementNr++) {
    if (strDate.indexOf(strSeparatorArray[intElementNr]) != -1) {
      strDateArray = strDate.split(strSeparatorArray[intElementNr]);
      if (strDateArray.length != 3) {
        err = 1;
        return false;
      }
      else {
        strDay = strDateArray[0];
        strMonth = strDateArray[1];
        strYear = strDateArray[2];
      }
      booFound = true;
    }
  }
  if (booFound == false) {
    if (strDate.length>5) {
      strDay = strDate.substr(0, 2);
      strMonth = strDate.substr(2, 2);
      strYear = strDate.substr(4);
    }
  }
  //Adjustment for short years entered
  if (strYear.length == 2) {
    strYear = '20' + strYear;
  }
  strTemp = strDay;
  strDay = strMonth;
  strMonth = strTemp;
  intday = parseInt(strDay, 10);
  if (isNaN(intday)) {
    err = 2;
    return false;
  }
  intMonth = parseInt(strMonth, 10);
  if (isNaN(intMonth)) {
    for (i = 0;i<12;i++) {
      if (strMonth.toUpperCase() == strMonthArray[i].toUpperCase()) {
        intMonth = i+1;
        strMonth = strMonthArray[i];
        i = 12;
      }
    }
    if (isNaN(intMonth)) {
      err = 3;
      return false;
    }
  }
  intYear = parseInt(strYear, 10);
  if (isNaN(intYear)) {
    err = 4;
    return false;
  }
  if (intMonth>12 || intMonth<1) {
    err = 5;
    return false;
  }
  if ((intMonth == 1 || intMonth == 3 || intMonth == 5 || intMonth == 7 || intMonth == 8 || intMonth == 10 || intMonth == 12) && (intday > 31 || intday < 1)) {
    err = 6;
    return false;
  }
  if ((intMonth == 4 || intMonth == 6 || intMonth == 9 || intMonth == 11) && (intday > 30 || intday < 1)) {
    err = 7;
    return false;
  }
  if (intMonth == 2) {
    if (intday < 1) {
      err = 8;
      return false;
    }
    if (LeapYear(intYear) == true) {
      if (intday > 29) {
        err = 9;
        return false;
      }
    }
    else {
      if (intday > 28) {
        err = 10;
        return false;
      }
    }
  }
  return true;
}

function LeapYear(intYear) {
  if (intYear % 100 == 0) {
    if (intYear % 400 == 0) { return true; }
  }
  else {
    if ((intYear % 4) == 0) { return true; }
  }
  return false;
}

function rangoFecha(fecha1, fecha2)
{  
  var asFecha1= fecha1.split("/");
  var asFecha2= fecha2.split("/");
  var ano;
  hoy=new Date();  
  ano=hoy.getFullYear();

  if(asFecha1[2]>ano || asFecha2[2]>ano)
  {
    return false;
  }
    
  if(asFecha2[2]<asFecha1[2])
  {
    return false;
  }
  else
  {
    if(asFecha2[2]==asFecha1[2])
    {
      if(asFecha2[1]<asFecha1[1])
      {
        return false;
      }
      else
      {
        if(asFecha2[1]==asFecha1[1])
        {
          if(asFecha2[0]<asFecha1[0])
          {
            return false;
          }
        }
      }
    }
  }
  return true;
}

//------------------------------------------------------------------------------
function validarFecha2( p_inputFecha )
{

	var _strMensaje = '';
	
	var p_strFecha = p_inputFecha.value;
	
  var fechaArr = p_strFecha.split("/");
	
	if( p_strFecha.length != 10 )
	{ _strMensaje = '- La fecha esta mal formada. \n'; }
	
	if( fechaArr.length != 3 )
	{
		if( _strMensaje == '' )
    { _strMensaje = '- La fecha esta mal formada. \n'; }  
	}
	else
	{
		
		if( isNaN( fechaArr[2] ) || parseInt( fechaArr[2] ) < 0  )
		{ _strMensaje += '- El año no es válido. \n' }
		
		if( isNaN( fechaArr[1] ) || ( (fechaArr[1] != "08" && fechaArr[1] != "09" ) && (parseInt(fechaArr[1]) < 1 || parseInt( fechaArr[1] ) > 12)   )  )
		{  _strMensaje += '- El mes no es válido. \n'; }  //se puso esta linea fechaArr[1] != "08" && fechaArr[1] != "09" poruqe no esta haciendo bien el parseInt para el caso de 09 y 08. att. linda Y.
		
		
//		if( isNaN( fechaArr[2] ) || parseInt( fechaArr[1] ) < 1  )
//		{
//			_strMensaje += '- El año no es válido. \n';
//		}

		var bisiesto = false;
		
		if( parseInt( fechaArr[2] ) % 4 == 0 )
		{
			bisiesto = true;
		}
		
		if( bisiesto && parseInt( fechaArr[1] ) == 2 && parseInt( fechaArr[0] ) > 29 )    
		{ _strMensaje += '- La fecha no es válida. \n'; }

		if( !bisiesto && parseInt( fechaArr[1] ) == 2 && parseInt( fechaArr[0] ) > 28 )
		{ _strMensaje += '- La fecha no es válida. \n'; }
		   
   		if ( ( parseInt( fechaArr[0] ) > 31 ) && ( (fechaArr[1] == '01') || ( fechaArr[1] == '03' ) || 
			 ( fechaArr[1] == '05' ) || ( fechaArr[1] == '07' ) || ( fechaArr[1] == '08' ) || ( fechaArr[1] == '10' ) || 
			 ( fechaArr[1] == '12') ) ) 
			{ _strMensaje += '- La fecha no es válida. \n'; }
	
	   	if ( ( parseInt( fechaArr[0] ) > 30 ) && ( ( fechaArr[1] == '04') || 
			( fechaArr[1] == '06' ) || ( fechaArr[1] == '09' ) || ( fechaArr[1] == '11') ) )
			{ _strMensaje += '- La fecha no es válida. \n'; }
		
	}

  //alert( _strMensaje + p_inputFecha.value );
  
	
  if( _strMensaje != '' )
    { alert( _strMensaje );
      p_inputFecha.focus();
    }
    
return _strMensaje;

}


//Función para validar Fechas
//L.Q.
function ValidarFecha(p_inputFecha )  
{
      
    //devuelve true si esta mal; false si esta bien
    var Dia, Mes, Anyo, Dia_Mes_Mal = false;
        
    var fechaArr = p_inputFecha.split("/");
    
    Dia = fechaArr[0];
    Mes = fechaArr[1];
    Anyo = fechaArr[2];       
    
    if( Dia == "" && Mes == "" && Anyo == "" ) 
        return true;
    else 
    {
      if ((Dia == "08") || (Dia == "09"))
      {
       if (Dia == "08")
       { Dia = 8;}
       if (Dia == "09")
       { Dia = 9;}       
      }
      else
      {
       Dia = parseInt(Dia);
      } 
      
      Mes = parseInt(Mes);
      Anyo = parseInt(Anyo);

      if( !isNaN(Dia) && !isNaN(Mes) && !isNaN(Anyo) && Dia >= 1 && Anyo >= 1900)  
      {
        
       /* El numero del mes debe estar entre 1 y 12 */ 
        if(  Mes > 12) 
       {  Dia_Mes_Mal = true; }
                        
       /* Los meses de Enero, Marzo, Mayo, Julio, Agosto,
          Octubre y Diciembre tienen 31 días */
          
        if( 
           (   Mes == 1 || Mes == 3 || Mes == 5 || Mes == 7
            || Mes == 8 || Mes == 10 || Mes == 12
           )
          && Dia > 31
          )   Dia_Mes_Mal = true;

        /* Los meses de Mayo, Junio, Septiembre
           y Noviembre tienen 30 días */

        if(
           (Mes == 4 || Mes == 6 || Mes == 9 || Mes == 11)
          && Dia > 30
          )   Dia_Mes_Mal = true;

    /* Febrero tiene 28 ó 29 días, dependiendo de si es bisiesto
       o no. Un año es bisiesto si es múltiplo de 4 pero no de
       100 salvo que sea múltiplo de 400. Por ejemplo, 12 y 400
       son bisiestos, pero 100 y 700 no. */
      
        if( Mes == 2 && 
            ( Dia > 29 ||
              ( Dia == 29 &&
                ( 
                  (Anyo % 400 != 0) && ( (Anyo % 4 != 0) || (Anyo % 100 == 0) )
                )
              )
            )
           )  Dia_Mes_Mal = true;

        if(Dia_Mes_Mal)  
        { return true; }
        else { return false; }
  }   /* Si la fecha está fuera del rango razonable... */
  else  
  {        
    return true;
  }
  
 }
}